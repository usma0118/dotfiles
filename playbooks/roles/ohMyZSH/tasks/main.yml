---
- name: Check if Oh My Zsh is installed
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.oh-my-zsh"
  register: ohmyzsh_installed
- name: Setup zsh as shell
  block:
    - name: Install zsh
      ansible.builtin.package:
        name: zsh
        state: present
      become: true
    - name: Set user shell to zsh
      ansible.builtin.user:
        name: "{{ user }}"
        shell: /bin/zsh
      become: true
- name: Setup iterm2 and ohmyzsh
  when:
    - ansible_os_family == "Darwin"
    - ohmyzsh_installed.stat.exists
  block:
    - name: For Mac OS X install iterm2
      when: ansible_os_family == "Darwin"
      community.general.homebrew_cask:
        name: iterm2
        state: latest
    - name: Download ohmyzsh
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        dest: "/tmp/install_ohmyzsh.sh"
        mode: '0755'
    - name: Install ohmyzsh
      ansible.builtin.command: /tmp/install_ohmyzsh.sh --unattended
      failed_when: "'FAILED' in ohmyzsh_result.stderr"
      when:
        - not ohmyzsh_installed.stat.exists
    - name: Cleanup directory
      ansible.builtin.file:
        path: "/tmp/install_ohmyzsh.sh"
        state: absent

- name: Installing Theme
  block:
    - name: Install PowerLevel10K (Theme)
      become: true
      ansible.builtin.git:
        repo: https://github.com/romkatv/powerlevel10k.git
        dest: "/home/{{ user }}/.oh-my-zsh/custom/themes/powerlevel10k"
        depth: 1
        single_branch: yes
        version: master
    - name: Symlink my powerlevel10k theme
      become: true
      ansible.builtin.file:
        src: /home/{{ user }}/.dotfiles/zshrc/themes/{{ item }}
        dest: /home/{{ user }}/{{ item }}
        state: link
        force: true
      with_items:
        - .p10k.zsh
    - name: Install fonts (Powerline)
      ansible.builtin.git:
        repo: https://github.com/powerline/fonts.git
        dest: "/tmp/fonts"
        depth: 1
    - name: Install PowerLevel10K
      ansible.builtin.script: "/tmp/fonts/install.sh"
    - name: Cleanup directory
      ansible.builtin.file:
        path: /tmp/fonts/
        state: absent
- name: Setup oh-my-zsh plugin zsh-syntax-highlighting
  block:
    - name: ZSH-syntax-highlighting on "Darwin"
      when:
        - ansible_os_family == "Darwin"
      community.general.homebrew:
        name: zsh-syntax-highlighting
        state: present
    - name: ZSH-syntax-highlighting on "Ubuntu"
      ansible.builtin.apt:
        name: zsh-syntax-highlighting
        state: present
      when:
        - ansible_os_family == "Ubuntu"
- name: Setup oh-my-zsh plugin zsh-autosuggestions
  block:
    - name: ZSH-autosuggestions on "Darwin"
      community.general.homebrew:
        name: zsh-autosuggestions
        state: present
      when:
        - ansible_os_family == "Darwin"
    - name: ZSH-autosuggestions on "Ubuntu"
      ansible.builtin.apt:
        name: zsh-autosuggestions
        state: present
      when:
        - ansible_os_family == "Ubuntu"

# - name: Setup oh-my-zsh plugin zsh-ssh
#   block:
#     - name: zsh-ssh on "Darwin"
#       when:
#         - ansible_os_family == "Darwin"
#       community.general.homebrew:
#         name: zsh-ssh
#         state: present
#     - name: zsh-ssh on "Alpine"
#       become: true
#       ansible.builtin.git:
#         repo: https://github.com/zsh-users/zsh-ssh.git
#         dest: "/home/{{ user }}/.oh-my-zsh/custom/plugins/zsh-ssh"
#         depth: 1
#       when:
#         - ansible_os_family == "Alpine" or ansible_os_family == "Ubuntu"
